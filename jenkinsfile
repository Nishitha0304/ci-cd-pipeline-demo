pipeline {
    agent any

    environment {
        TESTING_ENVIRONMENT = "testing_environment"
        PRODUCTION_ENVIRONMENT = "Nishitha"
    }

    stages {
        stage('Build') {
            steps {
                executeStep('Executing Maven build process')
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                executeStep('Executing JUnit tests')
                executeStep('Executing Selenium integration tests')
            }
        }

        stage('Code Analysis') {
            steps {
                executeStep('Performing static code analysis using Jenkins Plugins')
            }
        }

        stage('Security Scan') {
            steps {
                executeStep('Conducting security scan with SonarQube')
            }
        }

        stage('Deploy to Staging') {
            steps {
                executeStep('Initiating deployment to staging server')
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                executeStep('Conducting integration tests in staging environment')
            }
        }

        stage('Deploy to Production') {
            steps {
                executeStep('Initiating deployment to production server')
            }
        }
    }
}

// Define a generic function to execute a step and handle post actions
def executeStep(String action) {
    echo action
    postBuildActions()
}

// Define post-build actions to handle success and failure
def postBuildActions() {
    post {
        success {
            sendEmail('Successfully Completed')
        }
        failure {
            sendEmail('Failed')
        }
    }
}

// Define the function to send emails
def sendEmail(String message) {
    mail body: "Current Pipeline Stage: ${env.STAGE_NAME}\nResult: ${message}",
         subject: "Notification: ${env.STAGE_NAME} - ${message}",
         to: "nishithadayanand@gmail.com"
}
