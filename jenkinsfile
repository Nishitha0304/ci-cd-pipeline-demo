pipeline {
    agent any

    environment {
        TESTING_ENVIRONMENT = "testing_environment"
        PRODUCTION_ENVIRONMENT = "Nishitha"
    }

    stages {
        stage('Build') {
            steps {
                echo 'Executing Maven build process'
            }
            post {
                success {
                    sendEmail('Maven Build Completed Successfully')
                }
                failure {
                    sendEmail('Maven Build Failed')
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Executing JUnit tests'
                echo 'Executing Selenium integration tests'
            }
            post {
                success {
                    sendEmail('Testing Phase Completed Successfully')
                }
                failure {
                    sendEmail('Testing Phase Failed')
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing static code analysis using Jenkins Plugins'
            }
            post {
                success {
                    sendEmail('Code Analysis Completed Successfully')
                }
                failure {
                    sendEmail('Code Analysis Failed')
                }
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Conducting security scan with SonarQube'
            }
            post {
                success {
                    sendEmail('Security Scan Successful')
                }
                failure {
                    sendEmail('Security Scan Unsuccessful')
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Initiating deployment to staging server (e.g., AWS EC2 instance)'
            }
            post {
                success {
                    sendEmail('Deployment to Staging Successful')
                }
                failure {
                    sendEmail('Deployment to Staging Failed')
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Conducting integration tests in staging environment'
            }
            post {
                success {
                    sendEmail('Staging Environment Testing Successful')
                }
                failure {
                    sendEmail('Staging Environment Testing Failed')
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Initiating deployment to production server (e.g., AWS EC2 instance)'
            }
            post {
                success {
                    sendEmail('Deployment to Production Successful')
                }
                failure {
                    sendEmail('Deployment to Production Failed')
                }
            }
        }
    }
}

def sendEmail(String message) {
    mail body: "Current Pipeline Stage: ${env.STAGE_NAME}\nResult: ${message}",
         subject: "Notification: ${env.STAGE_NAME} - ${message}",
         to: "nishithadayanand@gmail.com"
}
